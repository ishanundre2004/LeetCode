class Solution {
public:
    bool isValid(int mid, vector<int> &nums, int m, int k)
    {
        int req = 0;
        int count = 0;
        for (int i = 0; i < nums.size(); i++){
            if (nums[i] <= mid) count++;            }
            else{
                req += (count / k);
                count = 0;
            }
        }
        req += (count / k);
        return req >= m;
    }
    int minDays(vector<int>& nums, int m, int k) {
        int n = nums.size();
        int lb = 0;
        int ub = *max_element(nums.begin(), nums.end());
        int ans = -1;
        while (lb <= ub){
            int mid = lb + (ub - lb) / 2;
            if (isValid(mid, nums, m, k)){
                ans = mid;
                ub = mid - 1;
            }
            else lb = mid + ;
        }
        return ans;
    }
};
